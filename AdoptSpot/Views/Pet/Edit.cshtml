@model AdoptSpot.Models.Pet

@{
    ViewData["Title"] = "Edit Pet";
}

<h2>@ViewData["Title"]</h2>


<form asp-action="Edit" enctype="multipart/form-data" method="post" id="editForm">
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Upload new images:</label>
        <input type="file" name="newImages" id="newImages" multiple class="form-control-file" />
    </div>
    <div class="form-group">
        <label>Current Images:</label>
        <div class="row">
            @foreach (var image in Model.Images)
            {
                <div class="col-md-4">
                    <img src="@Url.Action("GetImage", "Image", new { id = image.Id })" class="img-fluid" alt="Image @image.Id" />
                </div>
            }
        </div>
    </div>
    <!-- ... -->

    <table class="table">
        <thead>

            <tr>
                <th>Disease</th>
                <th>Date Administered</th>
                <th>Veterinarian Name</th>
                <th>Expiration Date</th>
                <th>Batch Number</th>
                <th>Notes</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="vaccinationsTableBody">
            @if (Model.MedicalRecord != null && Model.MedicalRecord.Vaccinations.Any())
            {
                int index = 0;
                foreach (var vaccine in Model.MedicalRecord.Vaccinations)
                {

            <tr data-id="@vaccine.Id">
                <td><input name="MedicalRecord.Vaccines[@index].Disease" value="@vaccine.Disease" class="form-control" readonly /></td>
                <td><input type="date" id="dateAdministered_@index" name="MedicalRecord.Vaccines[@index].DateAdministered" value="@vaccine.DateAdministered.ToString("yyyy-MM-dd")" class="form-control" readonly onblur="checkDates('@index')"  /></td>
                <td><input name="MedicalRecord.Vaccines[@index].VeterinarianName" value="@vaccine.VeterinarianName" class="form-control" readonly /></td>
                <td><input type="date"id="expirationDate_@index" name="MedicalRecord.Vaccines[@index].ExpirationDate" value="@vaccine.ExpirationDate.ToString("yyyy-MM-dd")" class="form-control" readonly onblur="checkDates('@index')"  /></td>
                <td><input name="MedicalRecord.Vaccines[@index].BatchNumber" value="@vaccine.BatchNumber" class="form-control" readonly /></td>
                <td><input name="MedicalRecord.Vaccines[@index].Notes" value="@vaccine.Notes" class="form-control" readonly /></td>
                <td><input name="MedicalRecord.Vaccines[@index].Id" type="hidden" value="@vaccine.Id" /></td>
                <td>
                    <a href="#" class="btn btn-secondary btn-sm" onclick="toggleReadOnly('@(vaccine.Id)'); return false;">Edit</a>
                    <a href="#" class="btn btn-danger btn-sm" onclick="deleteVaccination( @(vaccine.Id)); return false;">Delete</a>
                </td>
            </tr>
                    index++;
                }
            }
            else
            {
                <tr>
                    <td colspan="7">No MedicalRecord found for this pet or no vaccinations.</td>
                </tr>
            }
        </tbody>

    </table>

    <div id="newVaccinationContainer" style="display: none;">

    </div>
    <button type="button" id="addVaccinationBtn" class="btn btn-primary">Add Vaccination</button>


    <!-- ... -->

    <div class="form-group">
        <button type="button" class="btn btn-primary" onclick="submitFormWithAddedVaccinations(@Model.Id)">Update</button>



        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>


    <div class="form-group">
        <label asp-for="Species"></label>
        <input asp-for="Species" class="form-control" />
        <span asp-validation-for="Species" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Age"></label>
        <input asp-for="Age" class="form-control" />
        <span asp-validation-for="Age" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="PetGender"></label>
        <input asp-for="PetGender" class="form-control" />
        <span asp-validation-for="PetGender" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Color"></label>
        <input asp-for="Color" class="form-control" />
        <span asp-validation-for="Color" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Breed"></label>
        <input asp-for="Breed" class="form-control" />
        <span asp-validation-for="Breed" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Update</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>

    <div id="removedVaccinations" style="display: none;"></div>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

<script>

    function addVaccination(vaccinationsTableBody) {

        console.log("Adding a new vaccination...")
        var vaccinationsTableBody = document.getElementById("vaccinationsTableBody");
        var index = vaccinationsTableBody.children.length;
        var newRow = `
<tr data-id = "new">
    <td><input name="MedicalRecord.Vaccines[${index}].Disease" class="form-control" readonly /></td>
    <td><input id="dateAdministered_new" name="MedicalRecord.Vaccines[${index}].DateAdministered"  type="date" class="form-control" onblur="checkDates('new')" readonly /></td>
    <td><input name="MedicalRecord.Vaccines[${index}].VeterinarianName" class="form-control" readonly/></td>
    <td><input id="expirationDate_new" name="MedicalRecord.Vaccines[${index}].ExpirationDate"  type="date" class="form-control" onblur="checkDates('new')" readonly/></td>
    <td><input name="MedicalRecord.Vaccines[${index}].BatchNumber" class="form-control" readonly/></td>
    <td><input name="MedicalRecord.Vaccines[${index}].Notes" class="form-control" readonly/></td>
    <td><input name="MedicalRecord.Vaccines[${index}].Id" type="hidden" value = ${index}   /></td>
    <td>
       <a href="#" class="btn btn-secondary btn-sm" onclick="toggleReadOnly('new'); return false">Edit</a>
       <a href="#" class="btn btn-danger btn-sm" onclick="deleteVaccination( 'new'); return false;">Delete</a>
    </td>

</tr>`;
        vaccinationsTableBody.insertAdjacentHTML("beforeend", newRow);

    }

    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("addVaccinationBtn").addEventListener("click", addVaccination);
    });

    function checkDates(index) {
        var dateAdministeredInput = document.getElementById('dateAdministered_' + index);
        var expirationDateInput = document.getElementById('expirationDate_' + index);

        var dateAdministered = new Date(dateAdministeredInput.value);
        var expirationDate = new Date(expirationDateInput.value);

        if (dateAdministered > expirationDate) {
            alert('Date Administered cannot be later than Expiration Date.');
            expirationDateInput.value = dateAdministeredInput.value;
        }
    }

    function deleteVaccination(vaccineId) {

        if (vaccineId === 'new') {
            // Get the table body
            var vaccinationsTableBody = document.getElementById("vaccinationsTableBody");

            // Select the row with the specific data-id and remove it
            var rowToDelete = vaccinationsTableBody.querySelector(`tr[data-id="${vaccineId}"]`);
            rowToDelete.remove();
        } else {
            // Perform an AJAX call to delete the vaccination
            fetch(`/Pets/EditVaccinationDelete/${vaccineId}`, {
                method: "DELETE"
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Get the table body
                        var vaccinationsTableBody = document.getElementById("vaccinationsTableBody");

                        // Select the row with the specific data-id and remove it
                        var rowToDelete = vaccinationsTableBody.querySelector(`tr[data-id="${vaccineId}"]`);
                        rowToDelete.remove();

                        // Add the removed vaccination ID to the form
                        var removedVaccinations = document.getElementById("removedVaccinations");
                        var input = document.createElement("input");
                        input.type = "hidden";
                        input.name = "removedVaccinations[]";
                        input.value = vaccineId;
                        removedVaccinations.appendChild(input);
                    } else {
                        alert("Error deleting the vaccination.");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("Error deleting the vaccination.");
                });
        }
    
    }


    function toggleReadOnly(vaccineId) {
        var vaccinationsTableBody = document.getElementById("vaccinationsTableBody");
        var row = vaccinationsTableBody.querySelector(`tr[data-id="${vaccineId}"]`);
        if (row) {
            var inputs = row.querySelectorAll("input");

            for (var i = 0; i < inputs.length; i++) {
                var input = inputs[i];
                if (input.hasAttribute("readonly")) {
                    input.removeAttribute("readonly");
                } else {
                    input.setAttribute("readonly", "");
                }
            }
        } else {
            console.error("Error: Row not found for vaccineId: ", vaccineId);
        }
    }


    async function submitFormWithAddedVaccinations(petId) {
        const addedVaccinations = document.querySelectorAll('tr[data-id="new"]');


        for (const vaccinationRow of addedVaccinations) {
            const vaccination = {
                Disease: vaccinationRow.querySelector('input[name*="Disease"]').value,
                DateAdministered: vaccinationRow.querySelector('input[name*="DateAdministered"]').value,
                VeterinarianName: vaccinationRow.querySelector('input[name*="VeterinarianName"]').value,
                ExpirationDate: vaccinationRow.querySelector('input[name*="ExpirationDate"]').value,
                BatchNumber: vaccinationRow.querySelector('input[name*="BatchNumber"]').value,
                Notes: vaccinationRow.querySelector('input[name*="Notes"]').value
            };
            console.log(JSON.stringify(vaccination));
            /**/
            const response = await fetch(`/Pets/EditVaccination/${petId}`, {
        /**/
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
        },
        body: JSON.stringify(vaccination)
    });

    if (!response.ok) {
        console.error('Error adding vaccination', response);
        return;
    }
}

document.getElementById('editForm').submit();
}




</script>
}



